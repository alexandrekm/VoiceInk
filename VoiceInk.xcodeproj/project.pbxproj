// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 77;
	objects = {

/* Begin PBXBuildFile section */
		422B44FD2D8A518600947F25 /* whisper.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 422B44FA2D8A496B00947F25 /* whisper.framework */; };
		422B44FE2D8A518600947F25 /* whisper.framework in CopyFiles */ = {isa = PBXBuildFile; fileRef = 422B44FA2D8A496B00947F25 /* whisper.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		E19E53B02D36D8120067F3D4 /* libggml.dylib in CopyFiles */ = {isa = PBXBuildFile; fileRef = E19E53A72D36D7EF0067F3D4 /* libggml.dylib */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
		E19E53B12D36D8200067F3D4 /* libggml-base.dylib in CopyFiles */ = {isa = PBXBuildFile; fileRef = E19E53A82D36D7EF0067F3D4 /* libggml-base.dylib */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
		E19E53B22D36D82F0067F3D4 /* libwhisper.1.dylib in CopyFiles */ = {isa = PBXBuildFile; fileRef = E19E53AD2D36D7EF0067F3D4 /* libwhisper.1.dylib */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
		E19E53B32D36D84A0067F3D4 /* libggml-cpu.dylib in CopyFiles */ = {isa = PBXBuildFile; fileRef = E19E53AA2D36D7EF0067F3D4 /* libggml-cpu.dylib */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
		E19E53B42D36D85B0067F3D4 /* libggml-blas.dylib in CopyFiles */ = {isa = PBXBuildFile; fileRef = E19E53A92D36D7EF0067F3D4 /* libggml-blas.dylib */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
		E19E53B52D36D8660067F3D4 /* libggml-metal.dylib in CopyFiles */ = {isa = PBXBuildFile; fileRef = E19E53AB2D36D7EF0067F3D4 /* libggml-metal.dylib */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
		E1A261122CC143AC00B233D1 /* KeyboardShortcuts in Frameworks */ = {isa = PBXBuildFile; productRef = E1A261112CC143AC00B233D1 /* KeyboardShortcuts */; };
		E1ADD45A2CC5352A00303ECB /* LaunchAtLogin in Frameworks */ = {isa = PBXBuildFile; productRef = E1ADD4592CC5352A00303ECB /* LaunchAtLogin */; };
		E1ADD45F2CC544F100303ECB /* Sparkle in Frameworks */ = {isa = PBXBuildFile; productRef = E1ADD45E2CC544F100303ECB /* Sparkle */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		E11473C42CBE0F0B00318EE4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = E11473A82CBE0F0A00318EE4 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = E11473AF2CBE0F0A00318EE4;
			remoteInfo = VoiceInk;
		};
		E11473CE2CBE0F0B00318EE4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = E11473A82CBE0F0A00318EE4 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = E11473AF2CBE0F0A00318EE4;
			remoteInfo = VoiceInk;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		E19E53AF2D36D80A0067F3D4 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
				E19E53B52D36D8660067F3D4 /* libggml-metal.dylib in CopyFiles */,
				E19E53B42D36D85B0067F3D4 /* libggml-blas.dylib in CopyFiles */,
				E19E53B32D36D84A0067F3D4 /* libggml-cpu.dylib in CopyFiles */,
				422B44FE2D8A518600947F25 /* whisper.framework in CopyFiles */,
				E19E53B22D36D82F0067F3D4 /* libwhisper.1.dylib in CopyFiles */,
				E19E53B12D36D8200067F3D4 /* libggml-base.dylib in CopyFiles */,
				E19E53B02D36D8120067F3D4 /* libggml.dylib in CopyFiles */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		422B44FA2D8A496B00947F25 /* whisper.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = whisper.framework; path = "../whisper.cpp/build-macos/framework/whisper.framework"; sourceTree = "<group>"; };
		422BF1002D8A566F00947F25 /* whisper.objc.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; path = whisper.objc.xcodeproj; sourceTree = "<group>"; };
		422BF11B2D8A566F00947F25 /* whisper.swiftui.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; path = whisper.swiftui.xcodeproj; sourceTree = "<group>"; };
		428D38382D8A5B40003DB4EA /* whisper.objc.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; path = whisper.objc.xcodeproj; sourceTree = "<group>"; };
		428D38532D8A5B40003DB4EA /* whisper.swiftui.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; path = whisper.swiftui.xcodeproj; sourceTree = "<group>"; };
		E11473B02CBE0F0A00318EE4 /* VoiceInk.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = VoiceInk.app; sourceTree = BUILT_PRODUCTS_DIR; };
		E11473C32CBE0F0B00318EE4 /* VoiceInkTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = VoiceInkTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		E11473CD2CBE0F0B00318EE4 /* VoiceInkUITests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = VoiceInkUITests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		E19E53A72D36D7EF0067F3D4 /* libggml.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libggml.dylib; path = /usr/local/lib/libggml.dylib; sourceTree = "<absolute>"; };
		E19E53A82D36D7EF0067F3D4 /* libggml-base.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = "libggml-base.dylib"; path = "/usr/local/lib/libggml-base.dylib"; sourceTree = "<absolute>"; };
		E19E53A92D36D7EF0067F3D4 /* libggml-blas.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = "libggml-blas.dylib"; path = "/usr/local/lib/libggml-blas.dylib"; sourceTree = "<absolute>"; };
		E19E53AA2D36D7EF0067F3D4 /* libggml-cpu.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = "libggml-cpu.dylib"; path = "/usr/local/lib/libggml-cpu.dylib"; sourceTree = "<absolute>"; };
		E19E53AB2D36D7EF0067F3D4 /* libggml-metal.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = "libggml-metal.dylib"; path = "/usr/local/lib/libggml-metal.dylib"; sourceTree = "<absolute>"; };
		E19E53AC2D36D7EF0067F3D4 /* libwhisper.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libwhisper.dylib; path = /usr/local/lib/libwhisper.dylib; sourceTree = "<absolute>"; };
		E19E53AD2D36D7EF0067F3D4 /* libwhisper.1.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libwhisper.1.dylib; path = /usr/local/lib/libwhisper.1.dylib; sourceTree = "<absolute>"; };
		E19E53AE2D36D7EF0067F3D4 /* libwhisper.1.7.4.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libwhisper.1.7.4.dylib; path = /usr/local/lib/libwhisper.1.7.4.dylib; sourceTree = "<absolute>"; };
/* End PBXFileReference section */

/* Begin PBXFileSystemSynchronizedRootGroup section */
		428D3B472D8A5B40003DB4EA /* whisper.cpp */ = {
			isa = PBXFileSystemSynchronizedRootGroup;
			name = whisper.cpp;
			path = /Users/alexandre.mendonca/whisper.cpp;
			sourceTree = "<absolute>";
		};
		E11473B22CBE0F0A00318EE4 /* VoiceInk */ = {
			isa = PBXFileSystemSynchronizedRootGroup;
			path = VoiceInk;
			sourceTree = "<group>";
		};
		E11473C62CBE0F0B00318EE4 /* VoiceInkTests */ = {
			isa = PBXFileSystemSynchronizedRootGroup;
			path = VoiceInkTests;
			sourceTree = "<group>";
		};
		E11473D02CBE0F0B00318EE4 /* VoiceInkUITests */ = {
			isa = PBXFileSystemSynchronizedRootGroup;
			path = VoiceInkUITests;
			sourceTree = "<group>";
		};
/* End PBXFileSystemSynchronizedRootGroup section */

/* Begin PBXFrameworksBuildPhase section */
		E11473AD2CBE0F0A00318EE4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E1ADD45A2CC5352A00303ECB /* LaunchAtLogin in Frameworks */,
				E1ADD45F2CC544F100303ECB /* Sparkle in Frameworks */,
				E1A261122CC143AC00B233D1 /* KeyboardShortcuts in Frameworks */,
				422B44FD2D8A518600947F25 /* whisper.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E11473C02CBE0F0B00318EE4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E11473CA2CBE0F0B00318EE4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		422BF4102D8A566F00947F25 /* Products */ = {
			isa = PBXGroup;
			children = (
			);
			name = Products;
			sourceTree = "<group>";
		};
		422BF4122D8A566F00947F25 /* Products */ = {
			isa = PBXGroup;
			children = (
			);
			name = Products;
			sourceTree = "<group>";
		};
		428D3B482D8A5B40003DB4EA /* Products */ = {
			isa = PBXGroup;
			children = (
			);
			name = Products;
			sourceTree = "<group>";
		};
		428D3B4A2D8A5B40003DB4EA /* Products */ = {
			isa = PBXGroup;
			children = (
			);
			name = Products;
			sourceTree = "<group>";
		};
		E11473A72CBE0F0A00318EE4 = {
			isa = PBXGroup;
			children = (
				E11473B22CBE0F0A00318EE4 /* VoiceInk */,
				E11473C62CBE0F0B00318EE4 /* VoiceInkTests */,
				E11473D02CBE0F0B00318EE4 /* VoiceInkUITests */,
				E114741C2CBE1DE200318EE4 /* Frameworks */,
				E11473B12CBE0F0A00318EE4 /* Products */,
				428D3B472D8A5B40003DB4EA /* whisper.cpp */,
			);
			sourceTree = "<group>";
		};
		E11473B12CBE0F0A00318EE4 /* Products */ = {
			isa = PBXGroup;
			children = (
				E11473B02CBE0F0A00318EE4 /* VoiceInk.app */,
				E11473C32CBE0F0B00318EE4 /* VoiceInkTests.xctest */,
				E11473CD2CBE0F0B00318EE4 /* VoiceInkUITests.xctest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		E114741C2CBE1DE200318EE4 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				422B44FA2D8A496B00947F25 /* whisper.framework */,
				E19E53A72D36D7EF0067F3D4 /* libggml.dylib */,
				E19E53A82D36D7EF0067F3D4 /* libggml-base.dylib */,
				E19E53A92D36D7EF0067F3D4 /* libggml-blas.dylib */,
				E19E53AA2D36D7EF0067F3D4 /* libggml-cpu.dylib */,
				E19E53AB2D36D7EF0067F3D4 /* libggml-metal.dylib */,
				E19E53AC2D36D7EF0067F3D4 /* libwhisper.dylib */,
				E19E53AD2D36D7EF0067F3D4 /* libwhisper.1.dylib */,
				E19E53AE2D36D7EF0067F3D4 /* libwhisper.1.7.4.dylib */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		E11473AF2CBE0F0A00318EE4 /* VoiceInk */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E11473D72CBE0F0B00318EE4 /* Build configuration list for PBXNativeTarget "VoiceInk" */;
			buildPhases = (
				E11473AC2CBE0F0A00318EE4 /* Sources */,
				E11473AD2CBE0F0A00318EE4 /* Frameworks */,
				E11473AE2CBE0F0A00318EE4 /* Resources */,
				E19E53AF2D36D80A0067F3D4 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			fileSystemSynchronizedGroups = (
				E11473B22CBE0F0A00318EE4 /* VoiceInk */,
			);
			name = VoiceInk;
			packageProductDependencies = (
				E1A261112CC143AC00B233D1 /* KeyboardShortcuts */,
				E1ADD4592CC5352A00303ECB /* LaunchAtLogin */,
				E1ADD45E2CC544F100303ECB /* Sparkle */,
			);
			productName = VoiceInk;
			productReference = E11473B02CBE0F0A00318EE4 /* VoiceInk.app */;
			productType = "com.apple.product-type.application";
		};
		E11473C22CBE0F0B00318EE4 /* VoiceInkTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E11473DA2CBE0F0B00318EE4 /* Build configuration list for PBXNativeTarget "VoiceInkTests" */;
			buildPhases = (
				E11473BF2CBE0F0B00318EE4 /* Sources */,
				E11473C02CBE0F0B00318EE4 /* Frameworks */,
				E11473C12CBE0F0B00318EE4 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				E11473C52CBE0F0B00318EE4 /* PBXTargetDependency */,
			);
			fileSystemSynchronizedGroups = (
				E11473C62CBE0F0B00318EE4 /* VoiceInkTests */,
			);
			name = VoiceInkTests;
			packageProductDependencies = (
			);
			productName = VoiceInkTests;
			productReference = E11473C32CBE0F0B00318EE4 /* VoiceInkTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		E11473CC2CBE0F0B00318EE4 /* VoiceInkUITests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E11473DD2CBE0F0B00318EE4 /* Build configuration list for PBXNativeTarget "VoiceInkUITests" */;
			buildPhases = (
				E11473C92CBE0F0B00318EE4 /* Sources */,
				E11473CA2CBE0F0B00318EE4 /* Frameworks */,
				E11473CB2CBE0F0B00318EE4 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				E11473CF2CBE0F0B00318EE4 /* PBXTargetDependency */,
			);
			fileSystemSynchronizedGroups = (
				E11473D02CBE0F0B00318EE4 /* VoiceInkUITests */,
			);
			name = VoiceInkUITests;
			packageProductDependencies = (
			);
			productName = VoiceInkUITests;
			productReference = E11473CD2CBE0F0B00318EE4 /* VoiceInkUITests.xctest */;
			productType = "com.apple.product-type.bundle.ui-testing";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		E11473A82CBE0F0A00318EE4 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastSwiftUpdateCheck = 1600;
				LastUpgradeCheck = 1600;
				TargetAttributes = {
					E11473AF2CBE0F0A00318EE4 = {
						CreatedOnToolsVersion = 16.0;
					};
					E11473C22CBE0F0B00318EE4 = {
						CreatedOnToolsVersion = 16.0;
						TestTargetID = E11473AF2CBE0F0A00318EE4;
					};
					E11473CC2CBE0F0B00318EE4 = {
						CreatedOnToolsVersion = 16.0;
						TestTargetID = E11473AF2CBE0F0A00318EE4;
					};
				};
			};
			buildConfigurationList = E11473AB2CBE0F0A00318EE4 /* Build configuration list for PBXProject "VoiceInk" */;
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = E11473A72CBE0F0A00318EE4;
			minimizedProjectReferenceProxies = 1;
			packageReferences = (
				E1A261102CC143AC00B233D1 /* XCRemoteSwiftPackageReference "KeyboardShortcuts" */,
				E1ADD4582CC5352A00303ECB /* XCRemoteSwiftPackageReference "LaunchAtLogin-Modern" */,
				E1ADD45D2CC544F100303ECB /* XCRemoteSwiftPackageReference "Sparkle" */,
			);
			preferredProjectObjectVersion = 77;
			productRefGroup = E11473B12CBE0F0A00318EE4 /* Products */;
			projectDirPath = "";
			projectReferences = (
				{
					ProductGroup = 422BF4122D8A566F00947F25 /* Products */;
					ProjectRef = 422BF1002D8A566F00947F25 /* whisper.objc.xcodeproj */;
				},
				{
					ProductGroup = 428D3B482D8A5B40003DB4EA /* Products */;
					ProjectRef = 428D38382D8A5B40003DB4EA /* whisper.objc.xcodeproj */;
				},
				{
					ProductGroup = 422BF4102D8A566F00947F25 /* Products */;
					ProjectRef = 422BF11B2D8A566F00947F25 /* whisper.swiftui.xcodeproj */;
				},
				{
					ProductGroup = 428D3B4A2D8A5B40003DB4EA /* Products */;
					ProjectRef = 428D38532D8A5B40003DB4EA /* whisper.swiftui.xcodeproj */;
				},
			);
			projectRoot = "";
			targets = (
				E11473AF2CBE0F0A00318EE4 /* VoiceInk */,
				E11473C22CBE0F0B00318EE4 /* VoiceInkTests */,
				E11473CC2CBE0F0B00318EE4 /* VoiceInkUITests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		E11473AE2CBE0F0A00318EE4 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E11473C12CBE0F0B00318EE4 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E11473CB2CBE0F0B00318EE4 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		E11473AC2CBE0F0A00318EE4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E11473BF2CBE0F0B00318EE4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E11473C92CBE0F0B00318EE4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		E11473C52CBE0F0B00318EE4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = E11473AF2CBE0F0A00318EE4 /* VoiceInk */;
			targetProxy = E11473C42CBE0F0B00318EE4 /* PBXContainerItemProxy */;
		};
		E11473CF2CBE0F0B00318EE4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = E11473AF2CBE0F0A00318EE4 /* VoiceInk */;
			targetProxy = E11473CE2CBE0F0B00318EE4 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		E11473D52CBE0F0B00318EE4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MACOSX_DEPLOYMENT_TARGET = 15.0;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "DEBUG $(inherited)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		E11473D62CBE0F0B00318EE4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MACOSX_DEPLOYMENT_TARGET = 15.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
			};
			name = Release;
		};
		E11473D82CBE0F0B00318EE4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD)";
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				CODE_SIGN_ENTITLEMENTS = VoiceInk/VoiceInk.entitlements;
				"CODE_SIGN_IDENTITY[sdk=macosx*]" = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 112;
				DEVELOPMENT_ASSET_PATHS = "\"VoiceInk/Preview Content\"";
				DEVELOPMENT_TEAM = 5PSUPZFFKL;
				ENABLE_HARDENED_RUNTIME = YES;
				ENABLE_PREVIEWS = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/framework",
				);
				GENERATE_INFOPLIST_FILE = YES;
				HEADER_SEARCH_PATHS = /usr/local/include;
				INFOPLIST_FILE = VoiceInk/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = VoiceInk;
				INFOPLIST_KEY_LSApplicationCategoryType = "public.app-category.productivity";
				INFOPLIST_KEY_LSUIElement = NO;
				INFOPLIST_KEY_NSAppleEventsUsageDescription = "VoiceInk needs to interact with your browser to detect the current website for applying website-specific configurations.";
				INFOPLIST_KEY_NSHumanReadableCopyright = "";
				INFOPLIST_KEY_NSMicrophoneUsageDescription = "VoiceInk needs access to your microphone to record audio for transcription.";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"\"import Foundation\"",
					"\"#if canImport(whisper)\"",
					"\"import whisper\"",
					"#else",
					"\"#error(\\\"Unable to import whisper module. Please check your project configuration.\\\")\"",
					"#endif",
					"\"import os\"",
					"\"enum WhisperError: Error {\"",
					"\"    case couldNotInitializeContext\"",
					"}",
					"\"// Meet Whisper C++ constraint: Don't access from more than one thread at a time.\"",
					"\"actor WhisperContext {\"",
					"\"    private var context: OpaquePointer?\"",
					"\"    private var languageCString: [CChar]?\"",
					"\"    private var prompt: String?\"",
					"\"    private var promptCString: [CChar]?\"",
					"\"    private let logger = Logger(subsystem: \\\"com.prakashjoshipax.voiceink\\\", category: \\\"WhisperContext\\\")\"",
					"\"    private init() {\"",
					"\"        // Private initializer without context\"",
					"\"    }\"",
					"\"    init(context: OpaquePointer) {\"",
					"\"        self.context = context\"",
					"\"    }\"",
					"\"    deinit {\"",
					"\"        if let context = context {\"",
					"\"            whisper_free(context)\"",
					"\"        }\"",
					"\"    }\"",
					"\"    func fullTranscribe(samples: [Float]) {\"",
					"\"        guard let context = context else { return }\"",
					"\"        \"",
					"\"        // Leave 2 processors free (i.e. the high-efficiency cores).\"",
					"\"        let maxThreads = max(1, min(8, cpuCount() - 2))\"",
					"\"        var params = whisper_full_default_params(WHISPER_SAMPLING_GREEDY)\"",
					"\"        \"",
					"\"        // Read language directly from UserDefaults\"",
					"\"        let selectedLanguage = UserDefaults.standard.string(forKey: \\\"SelectedLanguage\\\") ?? \\\"auto\\\"\"",
					"\"        if selectedLanguage != \\\"auto\\\" {\"",
					"\"            languageCString = Array(selectedLanguage.utf8CString)\"",
					"\"            params.language = languageCString?.withUnsafeBufferPointer { ptr in\"",
					"\"                ptr.baseAddress\"",
					"\"            }\"",
					"\"            logger.notice(\\\"🌐 Using language: \\\\(selectedLanguage)\\\")\"",
					"\"        } else {\"",
					"\"            languageCString = nil\"",
					"\"            params.language = nil\"",
					"\"            logger.notice(\\\"🌐 Using auto language detection\\\")\"",
					"\"        }\"",
					"\"        \"",
					"\"        // Only use prompt for English language\"",
					"\"        if selectedLanguage == \\\"en\\\" && prompt != nil {\"",
					"\"            promptCString = Array(prompt!.utf8CString)\"",
					"\"            params.initial_prompt = promptCString?.withUnsafeBufferPointer { ptr in\"",
					"\"                ptr.baseAddress\"",
					"\"            }\"",
					"\"            logger.notice(\\\"💬 Using prompt for transcription\\\")\"",
					"\"        } else {\"",
					"\"            promptCString = nil\"",
					"\"            params.initial_prompt = nil\"",
					"\"        }\"",
					"\"        \"",
					"\"        // Adapted from whisper.objc\"",
					"\"        params.print_realtime   = true\"",
					"\"        params.print_progress   = false\"",
					"\"        params.print_timestamps = true\"",
					"\"        params.print_special    = false\"",
					"\"        params.translate        = false\"",
					"\"        params.n_threads        = Int32(maxThreads)\"",
					"\"        params.offset_ms        = 0\"",
					"\"        params.no_context       = true\"",
					"\"        params.single_segment   = false\"",
					"\"        \"",
					"\"        // Adjusted parameters to reduce hallucination\"",
					"\"        params.suppress_blank   = true      // Keep suppressing blank outputs\"",
					"\"        params.suppress_nst     = true      // Additional suppression of non-speech tokens\"",
					"\"        whisper_reset_timings(context)\"",
					"\"        logger.notice(\\\"⚙️ Starting whisper transcription\\\")\"",
					"\"        samples.withUnsafeBufferPointer { samples in\"",
					"\"            if (whisper_full(context, params, samples.baseAddress, Int32(samples.count)) != 0) {\"",
					"\"                logger.error(\\\"❌ Failed to run whisper model\\\")\"",
					"\"            } else {\"",
					"\"                // Print detected language info before timings\"",
					"\"                let langId = whisper_full_lang_id(context)\"",
					"\"                let detectedLang = String(cString: whisper_lang_str(langId))\"",
					"\"                logger.notice(\\\"✅ Transcription completed - Language: \\\\(detectedLang)\\\")\"",
					"\"                whisper_print_timings(context)\"",
					"\"            }\"",
					"\"        }\"",
					"\"        \"",
					"\"        languageCString = nil\"",
					"\"        promptCString = nil\"",
					"\"    }\"",
					"\"    func getTranscription() -> String {\"",
					"\"        guard let context = context else { return \\\"\\\" }\"",
					"\"        var transcription = \\\"\\\"\"",
					"\"        for i in 0..<whisper_full_n_segments(context) {\"",
					"\"            transcription += String(cString: whisper_full_get_segment_text(context, i))\"",
					"\"        }\"",
					"\"        return transcription\"",
					"\"    }\"",
					"\"    static func createContext(path: String) async throws -> WhisperContext {\"",
					"\"        // Create empty context first\"",
					"\"        let whisperContext = WhisperContext()\"",
					"\"        \"",
					"\"        // Initialize the context within the actor's isolated context\"",
					"\"        try await whisperContext.initializeModel(path: path)\"",
					"\"        \"",
					"\"        return whisperContext\"",
					"\"    }\"",
					"\"    \"",
					"\"    private func initializeModel(path: String) throws {\"",
					"\"        var params = whisper_context_default_params()\"",
					"\"        #if targetEnvironment(simulator)\"",
					"\"        params.use_gpu = false\"",
					"\"        logger.notice(\\\"🖥️ Running on simulator, using CPU\\\")\"",
					"\"        #endif\"",
					"\"        \"",
					"\"        let context = whisper_init_from_file_with_params(path, params)\"",
					"\"        if let context {\"",
					"\"            self.context = context\"",
					"\"        } else {\"",
					"\"            logger.error(\\\"❌ Couldn't load model at \\\\(path)\\\")\"",
					"\"            throw WhisperError.couldNotInitializeContext\"",
					"\"        }\"",
					"\"    }\"",
					"\"    func releaseResources() {\"",
					"\"        if let context = context {\"",
					"\"            whisper_free(context)\"",
					"\"            self.context = nil\"",
					"\"        }\"",
					"\"        languageCString = nil\"",
					"\"    }\"",
					"\"    func setPrompt(_ prompt: String?) {\"",
					"\"        self.prompt = prompt\"",
					"\"        logger.debug(\\\"💬 Prompt set: \\\\(prompt ?? \\\"none\\\")\\\")\"",
					"\"    }\"",
					"}",
					"\"fileprivate func cpuCount() -> Int {\"",
					"\"    ProcessInfo.processInfo.processorCount\"",
					"}",
					/usr/local/lib,
				);
				LIBRARY_SEARCH_PATHS = (
					/usr/local/lib,
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/src/Release-appletvsimulator",
					"$(PROJECT_DIR)/whisper.cpp/.venv/lib/python3.13/site-packages/torch/lib",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-base.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-blas.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-device/ggml/src/Release-iphoneos",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-base.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/ggml/src/ggml-metal/Release-appletvsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-metal.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-blas.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/ggml/src/Release-xrsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-device/ggml/src/Release-appletvos",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-device/src/Release-appletvos",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/ggml/src/ggml-blas/Release-xrsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/whisper.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build/ggml/src",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-cpu.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-blas.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos/ggml/src/ggml-blas/Release-xros",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-device/ggml/src/ggml-blas/Release-iphoneos",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/ggml/src/Release-iphonesimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-metal.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/src/Release-iphonesimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-blas.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-base.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-blas.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/ggml/src/ggml-metal/Release",
					"$(PROJECT_DIR)/whisper.cpp/build/examples",
					"$(PROJECT_DIR)/whisper.cpp/build/src",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/whisper.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-cpu.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-base.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/whisper.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/ggml/src/ggml-blas/Release-appletvsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/ggml/src/Release",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/ggml/src/Release-appletvsimulator",
					"$(PROJECT_DIR)/whisper.cpp/.venv/lib/python3.13/site-packages/numpy/random/lib",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos/ggml/src/Release-xros",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-metal.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/whisper.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/whisper.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-blas.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-cpu.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-device/ggml/src/ggml-metal/Release-appletvos",
					"$(PROJECT_DIR)/whisper.cpp/build/ggml/src/ggml-blas",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/ggml/src/ggml-blas/Release",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-device/src/Release-iphoneos",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/src/Release-xrsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-metal.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-cpu.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-metal.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/ggml/src/ggml-metal/Release-iphonesimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-base.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-cpu.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-device/ggml/src/ggml-blas/Release-appletvos",
					"$(PROJECT_DIR)/whisper.cpp/.venv/lib/python3.13/site-packages/numpy/_core/lib",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-cpu.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-metal.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/ggml/src/ggml-metal/Release-xrsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/src/Release",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-device/ggml/src/ggml-metal/Release-iphoneos",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-metal.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-base.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-blas.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/whisper.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/ggml/src/ggml-blas/Release-iphonesimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/whisper.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/whisper.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-cpu.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-cpu.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-metal.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-base.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos/ggml/src/ggml-metal/Release-xros",
					"$(PROJECT_DIR)/whisper.cpp/build/ggml/src/ggml-metal",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos/src/Release-xros",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-base.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/.venv/lib/python3.13/site-packages/safetensors",
					"$(PROJECT_DIR)/whisper.cpp/.venv/lib/python3.13/site-packages/tokenizers",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-blas.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
				);
				MACOSX_DEPLOYMENT_TARGET = 14.0;
				MARKETING_VERSION = 1.12;
				PRODUCT_BUNDLE_IDENTIFIER = com.alexandrekm.VoiceInk;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		E11473D92CBE0F0B00318EE4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD)";
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				CODE_SIGN_ENTITLEMENTS = VoiceInk/VoiceInk.entitlements;
				"CODE_SIGN_IDENTITY[sdk=macosx*]" = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 112;
				DEVELOPMENT_ASSET_PATHS = "\"VoiceInk/Preview Content\"";
				DEVELOPMENT_TEAM = 5PSUPZFFKL;
				ENABLE_HARDENED_RUNTIME = YES;
				ENABLE_PREVIEWS = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/framework",
				);
				GENERATE_INFOPLIST_FILE = YES;
				HEADER_SEARCH_PATHS = /usr/local/include;
				INFOPLIST_FILE = VoiceInk/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = VoiceInk;
				INFOPLIST_KEY_LSApplicationCategoryType = "public.app-category.productivity";
				INFOPLIST_KEY_LSUIElement = NO;
				INFOPLIST_KEY_NSAppleEventsUsageDescription = "VoiceInk needs to interact with your browser to detect the current website for applying website-specific configurations.";
				INFOPLIST_KEY_NSHumanReadableCopyright = "";
				INFOPLIST_KEY_NSMicrophoneUsageDescription = "VoiceInk needs access to your microphone to record audio for transcription.";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"\"import Foundation\"",
					"\"#if canImport(whisper)\"",
					"\"import whisper\"",
					"#else",
					"\"#error(\\\"Unable to import whisper module. Please check your project configuration.\\\")\"",
					"#endif",
					"\"import os\"",
					"\"enum WhisperError: Error {\"",
					"\"    case couldNotInitializeContext\"",
					"}",
					"\"// Meet Whisper C++ constraint: Don't access from more than one thread at a time.\"",
					"\"actor WhisperContext {\"",
					"\"    private var context: OpaquePointer?\"",
					"\"    private var languageCString: [CChar]?\"",
					"\"    private var prompt: String?\"",
					"\"    private var promptCString: [CChar]?\"",
					"\"    private let logger = Logger(subsystem: \\\"com.prakashjoshipax.voiceink\\\", category: \\\"WhisperContext\\\")\"",
					"\"    private init() {\"",
					"\"        // Private initializer without context\"",
					"\"    }\"",
					"\"    init(context: OpaquePointer) {\"",
					"\"        self.context = context\"",
					"\"    }\"",
					"\"    deinit {\"",
					"\"        if let context = context {\"",
					"\"            whisper_free(context)\"",
					"\"        }\"",
					"\"    }\"",
					"\"    func fullTranscribe(samples: [Float]) {\"",
					"\"        guard let context = context else { return }\"",
					"\"        \"",
					"\"        // Leave 2 processors free (i.e. the high-efficiency cores).\"",
					"\"        let maxThreads = max(1, min(8, cpuCount() - 2))\"",
					"\"        var params = whisper_full_default_params(WHISPER_SAMPLING_GREEDY)\"",
					"\"        \"",
					"\"        // Read language directly from UserDefaults\"",
					"\"        let selectedLanguage = UserDefaults.standard.string(forKey: \\\"SelectedLanguage\\\") ?? \\\"auto\\\"\"",
					"\"        if selectedLanguage != \\\"auto\\\" {\"",
					"\"            languageCString = Array(selectedLanguage.utf8CString)\"",
					"\"            params.language = languageCString?.withUnsafeBufferPointer { ptr in\"",
					"\"                ptr.baseAddress\"",
					"\"            }\"",
					"\"            logger.notice(\\\"🌐 Using language: \\\\(selectedLanguage)\\\")\"",
					"\"        } else {\"",
					"\"            languageCString = nil\"",
					"\"            params.language = nil\"",
					"\"            logger.notice(\\\"🌐 Using auto language detection\\\")\"",
					"\"        }\"",
					"\"        \"",
					"\"        // Only use prompt for English language\"",
					"\"        if selectedLanguage == \\\"en\\\" && prompt != nil {\"",
					"\"            promptCString = Array(prompt!.utf8CString)\"",
					"\"            params.initial_prompt = promptCString?.withUnsafeBufferPointer { ptr in\"",
					"\"                ptr.baseAddress\"",
					"\"            }\"",
					"\"            logger.notice(\\\"💬 Using prompt for transcription\\\")\"",
					"\"        } else {\"",
					"\"            promptCString = nil\"",
					"\"            params.initial_prompt = nil\"",
					"\"        }\"",
					"\"        \"",
					"\"        // Adapted from whisper.objc\"",
					"\"        params.print_realtime   = true\"",
					"\"        params.print_progress   = false\"",
					"\"        params.print_timestamps = true\"",
					"\"        params.print_special    = false\"",
					"\"        params.translate        = false\"",
					"\"        params.n_threads        = Int32(maxThreads)\"",
					"\"        params.offset_ms        = 0\"",
					"\"        params.no_context       = true\"",
					"\"        params.single_segment   = false\"",
					"\"        \"",
					"\"        // Adjusted parameters to reduce hallucination\"",
					"\"        params.suppress_blank   = true      // Keep suppressing blank outputs\"",
					"\"        params.suppress_nst     = true      // Additional suppression of non-speech tokens\"",
					"\"        whisper_reset_timings(context)\"",
					"\"        logger.notice(\\\"⚙️ Starting whisper transcription\\\")\"",
					"\"        samples.withUnsafeBufferPointer { samples in\"",
					"\"            if (whisper_full(context, params, samples.baseAddress, Int32(samples.count)) != 0) {\"",
					"\"                logger.error(\\\"❌ Failed to run whisper model\\\")\"",
					"\"            } else {\"",
					"\"                // Print detected language info before timings\"",
					"\"                let langId = whisper_full_lang_id(context)\"",
					"\"                let detectedLang = String(cString: whisper_lang_str(langId))\"",
					"\"                logger.notice(\\\"✅ Transcription completed - Language: \\\\(detectedLang)\\\")\"",
					"\"                whisper_print_timings(context)\"",
					"\"            }\"",
					"\"        }\"",
					"\"        \"",
					"\"        languageCString = nil\"",
					"\"        promptCString = nil\"",
					"\"    }\"",
					"\"    func getTranscription() -> String {\"",
					"\"        guard let context = context else { return \\\"\\\" }\"",
					"\"        var transcription = \\\"\\\"\"",
					"\"        for i in 0..<whisper_full_n_segments(context) {\"",
					"\"            transcription += String(cString: whisper_full_get_segment_text(context, i))\"",
					"\"        }\"",
					"\"        return transcription\"",
					"\"    }\"",
					"\"    static func createContext(path: String) async throws -> WhisperContext {\"",
					"\"        // Create empty context first\"",
					"\"        let whisperContext = WhisperContext()\"",
					"\"        \"",
					"\"        // Initialize the context within the actor's isolated context\"",
					"\"        try await whisperContext.initializeModel(path: path)\"",
					"\"        \"",
					"\"        return whisperContext\"",
					"\"    }\"",
					"\"    \"",
					"\"    private func initializeModel(path: String) throws {\"",
					"\"        var params = whisper_context_default_params()\"",
					"\"        #if targetEnvironment(simulator)\"",
					"\"        params.use_gpu = false\"",
					"\"        logger.notice(\\\"🖥️ Running on simulator, using CPU\\\")\"",
					"\"        #endif\"",
					"\"        \"",
					"\"        let context = whisper_init_from_file_with_params(path, params)\"",
					"\"        if let context {\"",
					"\"            self.context = context\"",
					"\"        } else {\"",
					"\"            logger.error(\\\"❌ Couldn't load model at \\\\(path)\\\")\"",
					"\"            throw WhisperError.couldNotInitializeContext\"",
					"\"        }\"",
					"\"    }\"",
					"\"    func releaseResources() {\"",
					"\"        if let context = context {\"",
					"\"            whisper_free(context)\"",
					"\"            self.context = nil\"",
					"\"        }\"",
					"\"        languageCString = nil\"",
					"\"    }\"",
					"\"    func setPrompt(_ prompt: String?) {\"",
					"\"        self.prompt = prompt\"",
					"\"        logger.debug(\\\"💬 Prompt set: \\\\(prompt ?? \\\"none\\\")\\\")\"",
					"\"    }\"",
					"}",
					"\"fileprivate func cpuCount() -> Int {\"",
					"\"    ProcessInfo.processInfo.processorCount\"",
					"}",
					/usr/local/lib,
				);
				LIBRARY_SEARCH_PATHS = (
					/usr/local/lib,
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/src/Release-appletvsimulator",
					"$(PROJECT_DIR)/whisper.cpp/.venv/lib/python3.13/site-packages/torch/lib",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-base.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-blas.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-device/ggml/src/Release-iphoneos",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-base.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/ggml/src/ggml-metal/Release-appletvsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-metal.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-blas.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/ggml/src/Release-xrsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-device/ggml/src/Release-appletvos",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-device/src/Release-appletvos",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/ggml/src/ggml-blas/Release-xrsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/whisper.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build/ggml/src",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-cpu.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-blas.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos/ggml/src/ggml-blas/Release-xros",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-device/ggml/src/ggml-blas/Release-iphoneos",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/ggml/src/Release-iphonesimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-metal.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/src/Release-iphonesimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-blas.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-base.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-blas.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/ggml/src/ggml-metal/Release",
					"$(PROJECT_DIR)/whisper.cpp/build/examples",
					"$(PROJECT_DIR)/whisper.cpp/build/src",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/whisper.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-cpu.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-base.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/whisper.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/ggml/src/ggml-blas/Release-appletvsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/ggml/src/Release",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/ggml/src/Release-appletvsimulator",
					"$(PROJECT_DIR)/whisper.cpp/.venv/lib/python3.13/site-packages/numpy/random/lib",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos/ggml/src/Release-xros",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-metal.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/whisper.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/whisper.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-blas.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-cpu.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-device/ggml/src/ggml-metal/Release-appletvos",
					"$(PROJECT_DIR)/whisper.cpp/build/ggml/src/ggml-blas",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/ggml/src/ggml-blas/Release",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-device/src/Release-iphoneos",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/src/Release-xrsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-metal.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-cpu.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-metal.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/ggml/src/ggml-metal/Release-iphonesimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-base.build/Release-appletvsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-cpu.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-device/ggml/src/ggml-blas/Release-appletvos",
					"$(PROJECT_DIR)/whisper.cpp/.venv/lib/python3.13/site-packages/numpy/_core/lib",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-cpu.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml-metal.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/ggml/src/ggml-metal/Release-xrsimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-tvos-sim/build/ggml.build/Release-appletvsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/src/Release",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-device/ggml/src/ggml-metal/Release-iphoneos",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-metal.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-base.build/Release-xrsimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-blas.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/whisper.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/ggml/src/ggml-blas/Release-iphonesimulator",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/whisper.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/whisper.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-cpu.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-cpu.build/Release-iphonesimulator/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos-sim/build/ggml-metal.build/Release-xrsimulator/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-base.build/Release/Objects-normal/x86_64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos/ggml/src/ggml-metal/Release-xros",
					"$(PROJECT_DIR)/whisper.cpp/build/ggml/src/ggml-metal",
					"$(PROJECT_DIR)/whisper.cpp/build-visionos/src/Release-xros",
					"$(PROJECT_DIR)/whisper.cpp/build-macos/build/ggml-base.build/Release/Objects-normal/arm64/Binary",
					"$(PROJECT_DIR)/whisper.cpp/.venv/lib/python3.13/site-packages/safetensors",
					"$(PROJECT_DIR)/whisper.cpp/.venv/lib/python3.13/site-packages/tokenizers",
					"$(PROJECT_DIR)/whisper.cpp/build-ios-sim/build/ggml-blas.build/Release-iphonesimulator/Objects-normal/arm64/Binary",
				);
				MACOSX_DEPLOYMENT_TARGET = 14.0;
				MARKETING_VERSION = 1.12;
				PRODUCT_BUNDLE_IDENTIFIER = com.alexandrekm.VoiceInk;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		E11473DB2CBE0F0B00318EE4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = V6J6A3VWY2;
				GENERATE_INFOPLIST_FILE = YES;
				MACOSX_DEPLOYMENT_TARGET = 14.0;
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.prakashjoshipax.VoiceInkTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = NO;
				SWIFT_VERSION = 5.0;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/VoiceInk.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/VoiceInk";
			};
			name = Debug;
		};
		E11473DC2CBE0F0B00318EE4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = V6J6A3VWY2;
				GENERATE_INFOPLIST_FILE = YES;
				MACOSX_DEPLOYMENT_TARGET = 14.0;
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.prakashjoshipax.VoiceInkTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = NO;
				SWIFT_VERSION = 5.0;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/VoiceInk.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/VoiceInk";
			};
			name = Release;
		};
		E11473DE2CBE0F0B00318EE4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = V6J6A3VWY2;
				GENERATE_INFOPLIST_FILE = YES;
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.prakashjoshipax.VoiceInkUITests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = NO;
				SWIFT_VERSION = 5.0;
				TEST_TARGET_NAME = VoiceInk;
			};
			name = Debug;
		};
		E11473DF2CBE0F0B00318EE4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = V6J6A3VWY2;
				GENERATE_INFOPLIST_FILE = YES;
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.prakashjoshipax.VoiceInkUITests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = NO;
				SWIFT_VERSION = 5.0;
				TEST_TARGET_NAME = VoiceInk;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		E11473AB2CBE0F0A00318EE4 /* Build configuration list for PBXProject "VoiceInk" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E11473D52CBE0F0B00318EE4 /* Debug */,
				E11473D62CBE0F0B00318EE4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		E11473D72CBE0F0B00318EE4 /* Build configuration list for PBXNativeTarget "VoiceInk" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E11473D82CBE0F0B00318EE4 /* Debug */,
				E11473D92CBE0F0B00318EE4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		E11473DA2CBE0F0B00318EE4 /* Build configuration list for PBXNativeTarget "VoiceInkTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E11473DB2CBE0F0B00318EE4 /* Debug */,
				E11473DC2CBE0F0B00318EE4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		E11473DD2CBE0F0B00318EE4 /* Build configuration list for PBXNativeTarget "VoiceInkUITests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E11473DE2CBE0F0B00318EE4 /* Debug */,
				E11473DF2CBE0F0B00318EE4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */

/* Begin XCRemoteSwiftPackageReference section */
		E1A261102CC143AC00B233D1 /* XCRemoteSwiftPackageReference "KeyboardShortcuts" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/sindresorhus/KeyboardShortcuts";
			requirement = {
				kind = upToNextMajorVersion;
				minimumVersion = 2.2.0;
			};
		};
		E1ADD4582CC5352A00303ECB /* XCRemoteSwiftPackageReference "LaunchAtLogin-Modern" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/sindresorhus/LaunchAtLogin-Modern";
			requirement = {
				branch = main;
				kind = branch;
			};
		};
		E1ADD45D2CC544F100303ECB /* XCRemoteSwiftPackageReference "Sparkle" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/sparkle-project/Sparkle";
			requirement = {
				kind = upToNextMajorVersion;
				minimumVersion = 2.6.4;
			};
		};
/* End XCRemoteSwiftPackageReference section */

/* Begin XCSwiftPackageProductDependency section */
		E1A261112CC143AC00B233D1 /* KeyboardShortcuts */ = {
			isa = XCSwiftPackageProductDependency;
			package = E1A261102CC143AC00B233D1 /* XCRemoteSwiftPackageReference "KeyboardShortcuts" */;
			productName = KeyboardShortcuts;
		};
		E1ADD4592CC5352A00303ECB /* LaunchAtLogin */ = {
			isa = XCSwiftPackageProductDependency;
			package = E1ADD4582CC5352A00303ECB /* XCRemoteSwiftPackageReference "LaunchAtLogin-Modern" */;
			productName = LaunchAtLogin;
		};
		E1ADD45E2CC544F100303ECB /* Sparkle */ = {
			isa = XCSwiftPackageProductDependency;
			package = E1ADD45D2CC544F100303ECB /* XCRemoteSwiftPackageReference "Sparkle" */;
			productName = Sparkle;
		};
/* End XCSwiftPackageProductDependency section */
	};
	rootObject = E11473A82CBE0F0A00318EE4 /* Project object */;
}
